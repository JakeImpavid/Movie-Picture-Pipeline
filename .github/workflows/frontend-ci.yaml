name: Frontend CI

# Trigger the workflow on pull requests and allow manual runs
on:
  pull_request:
  workflow_dispatch:

jobs:
  # Lint job
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3 to support Node.js 16/20

      - name: Setup Node.js
        uses: actions/setup-node@v3  # Ensure using the correct version
        with:
          node-version: '20'  # Update Node.js to the latest stable version (20)

      - name: Cache Node.js modules
        uses: actions/cache@v3  # Updated to v3 for Node.js 16/20 compatibility
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint

  # Test job
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3

      - name: Setup Node.js
        uses: actions/setup-node@v3  # Ensure using the correct version
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v3  # Updated to v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

  # Build job, depends on lint and test jobs
  build:
    runs-on: ubuntu-latest
    needs: 
      - lint
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3

      - name: Setup Node.js
        uses: actions/setup-node@v3  # Ensure using the correct version
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v3  # Updated to v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t frontend-app .
